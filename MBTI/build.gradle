plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
}

group = 'com.mbti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	//카카오로그인
	//implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: '5.6.3'
	//implementation 'com.google.code.gson:gson:2.8.7'

	//####유진추가####
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	//이메일 인증
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'
	

	
}

tasks.named('test') {
	useJUnitPlatform()
}

def frontendDir = "$projectDir/src/main/frontend"
sourceSets {
  	main {
    	resources { srcDirs = ["$projectDir/src/main/resources"] } 
	}
}
processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
  	workingDir "$frontendDir"
  	inputs.dir "$frontendDir"
  	group = BasePlugin.BUILD_GROUP
  	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    	commandLine "npm.cmd", "audit", "fix"
    	commandLine 'npm.cmd', 'install' }
  	else {
    	commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
  	}
}
task buildReact(type: Exec) {
  	dependsOn "installReact"
  	workingDir "$frontendDir"
  	inputs.dir "$frontendDir"
  	group = BasePlugin.BUILD_GROUP
  	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
    	commandLine "npm.cmd", "run-script", "build"
  	} else {
    	commandLine "npm", "run-script", "build"
  	}
}
task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}